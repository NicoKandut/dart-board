from utility_stuff.config_parsing import parseConfigFile
from utility_stuff.gpio import *
from utility_stuff.hardware import *

### GLOBALS
o_player = None
o_score = None
o_remain = None
o_status_led = None

snap_rate = None

photo_res = None

cam1_port = None
cam2_port = None
cam3_port = None


### FUNCTIONS --------------------------------------------------------------------
def calibrateCams():
    #TODO: calibrateCams()
    pass

def init():
    # parsing config file
    config = parseConfigFile()
    conf_cams = config['CAMS']
    conf_gpios = config['GPIOS']
    conf_photo = config['PHOTO']
    conf_general = config['GENERAL']

    # initialise GPIO ports on raspberry
    setGPIOModeToBoard()

    # set global variables
    o_player     = Shifter(conf_gpios['PLAYER_DATA_OUT']   , conf_gpios['CLOCK'], conf_gpios['CLEAR_DATA'])
    o_score      = Shifter(conf_gpios['SCORE_DATA_OUT']    , conf_gpios['CLOCK'], conf_gpios['CLEAR_DATA'])
    o_remain     = Shifter(conf_gpios['REMAINDER_DATA_OUT'], conf_gpios['CLOCK'], conf_gpios['CLEAR_DATA'])
    o_status_led = Led(conf_gpios['STAUS_LED'])

    snap_rate = float(conf_general['SNAP_RATE'])

    photo_res = int(conf_photo['PHOTO_RESOLUTION'])

    cam1_port = int(conf_cams['CAM_PORT_1'])
    cam2_port = int(conf_cams['CAM_PORT_2'])
    cam3_port = int(conf_cams['CAM_PORT_3'])

def routine() -> int:
    #TODO: routine()
    return 0


### MAIN -----------------------------------------------------------------
if __name__ == "__main__":
    try:
        ## initialise the system
        init()

        ## loop
        while True:
            ret = routine()
            if ret:
                break

    except Exception as e:
        print(e)

    
